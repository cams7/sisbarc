<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>br.com.cams7.sisbarc</groupId>
		<artifactId>jmx</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<artifactId>acende_apaga_leds_monitor</artifactId>
	<name>Monitor Acende Apaga LEDs</name>
	<description>Monitor Acende Apaga LEDs</description>

	<packaging>jar</packaging>

	<properties>
		<version.wildfly>9.0.0.Alpha1</version.wildfly>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly</groupId>
				<artifactId>wildfly-ejb-client-bom</artifactId>
				<version>${version.wildfly}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>br.com.cams7.sisbarc</groupId>
			<artifactId>sisbarc-base</artifactId>
		</dependency>

		<dependency>
			<groupId>br.com.cams7.sisbarc</groupId>
			<artifactId>arduino-base</artifactId>
		</dependency>
		<dependency>
			<groupId>br.com.cams7.sisbarc</groupId>
			<artifactId>acende_apaga_leds_monitor-base</artifactId>
		</dependency>

		<dependency>
			<groupId>br.com.cams7.sisbarc</groupId>
			<artifactId>acende_apaga_leds-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>br.com.cams7.sisbarc</groupId>
			<artifactId>acende_apaga_leds-ejb</artifactId>
			<type>ejb-client</type>
		</dependency>

		<!-- Import the transaction spec API, we use runtime scope because we aren't 
			using any direct reference to the spec API in our client code -->
		<dependency>
			<groupId>org.jboss.spec.javax.transaction</groupId>
			<artifactId>jboss-transaction-api_1.2_spec</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- client communications with the server use XNIO -->
		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-api</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-nio</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- The client needs JBoss remoting to access the server -->
		<dependency>
			<groupId>org.jboss.remoting</groupId>
			<artifactId>jboss-remoting</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Remote EJB accesses can be secured -->
		<dependency>
			<groupId>org.jboss.sasl</groupId>
			<artifactId>jboss-sasl</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- data serialization for invoking remote EJBs -->
		<dependency>
			<groupId>org.jboss.marshalling</groupId>
			<artifactId>jboss-marshalling-river</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Import the EJB 3.1 API, we use runtime scope because we aren't using 
			any direct reference to EJB spec API in our client code -->
		<dependency>
			<groupId>org.jboss.spec.javax.ejb</groupId>
			<artifactId>jboss-ejb-api_3.2_spec</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- JBoss EJB client API jar. We use runtime scope because the EJB client 
			API isn't directly used in this example. We just need it in our runtime classpath -->
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-ejb-client</artifactId>
			<!-- scope>runtime</scope -->
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- Make this jar executable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- DO NOT include log4j.properties file in your Jar -->
					<excludes>
						<exclude>**/log4j.properties</exclude>
					</excludes>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>br.com.cams7.sisbarc.aal.jmx.Main</mainClass>
							<classpathPrefix>dependency-jars/</classpathPrefix>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<mode>development</mode>
							<url>${project.url}</url>
							<!--key>value</key -->
							<Implementation-Build>${buildNumber}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>



